name: Deploy-to-EC2 instance

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Push to EC2
    runs-on: ubuntu-22.04
    environment:
      name: production
      url: http://172.104.208.84/

    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "🔍 Checking for Docker installation..."
            if ! command -v docker &> /dev/null; then
                echo "🐳 Installing Docker..."
                sudo apt update
                sudo apt install -y \
                    ca-certificates \
                    curl \
                    gnupg \
                    lsb-release

                sudo mkdir -p /etc/apt/keyrings
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
                  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

                echo \
                  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
                  https://download.docker.com/linux/ubuntu \
                  $(lsb_release -cs) stable" | \
                  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

                sudo apt update
                sudo apt install -y docker-ce docker-ce-cli containerd.io

                sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
                  -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose
                echo "✅ Docker installed."
            else
                echo "✅ Docker already installed."
            fi

            echo "✅ Docker Compose version: $(docker-compose version)"

            echo "🚀 Starting deployment..."

            # Optional: navigate into project directory if needed
            # cd /path/to/project

            cd /home/ubuntu/app/
            echo "${{ secrets.ROOT_ENV }}" >> /home/ubuntu/app/.env
            echo "${{ secrets.BACKEND_ENV }}" >> /home/ubuntu/app/backend/.env
            
            sudo docker-compose down --remove-orphans
            sudo docker-compose up --build -d

            echo "🎉 App is deployed and accessible on"
